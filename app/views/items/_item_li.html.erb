<!-- 1. Initial working code
<li class="<%#= "completed" if item.complete? %>">
-->
<!-- 2. Build a view helper in helpers/items_helper.rb
<li class="<%#= li_class_for_item(item) %>">
-->
<!-- 3. Use content_tag_for for language consistency
<%#= content_tag_for :li, item, :class => li_class_for_item(item) do %>
-->
<!-- 4. Build a helper method -->
<%= li_for_item(item) do %>
  <div class="view">
    <!-- 1. Original working code
    <%#= form_for([@list, item]) do |f| %>
      <%#= f.check_box :status, :class => "toggle", :checked => item.complete? %>
    <%# end %>
    -->
    <!-- 2. Build a helper -->
    <%= form_for_item_status(item) %>

    <label><%= item.description %></label>

    <!-- 1. Build out a delete button, but Rails rejects this form submission because the vanilla HTML is deemed insecure
    <form action="<%#= list_item_path(item.list, item) %>" method="POST">
      <input type="hidden" name="_method" value="DELETE" />
      <button type="submit" class="destroy"></button>
    </form>
    -->
    <!-- 2. Build it using Rails form_tag helper -->
    <%#= form_tag(list_item_path(item.list, item), :method => :delete) do %>
      <!-- 1. Build button
      <button type="submit" class="destroy"></button>
      -->
    <%# end %>
    <!-- 2. Use button_to macro -->
    <%= button_to "x", list_item_path(item.list, item), :method => "delete", :class => "destroy" %>

  </div>
<% end %>
